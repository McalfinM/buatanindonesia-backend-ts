"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.container = void 0;
const routes_1 = __importDefault(require("./api/routes"));
const kafka_1 = __importDefault(require("./events/connectors/kafka"));
const dispatcher_1 = require("./events/consumers/dispatcher");
const dispatcher_2 = require("./events/producers/dispatcher");
const subscribers_1 = __importDefault(require("./events/subscribers"));
const types_1 = require("./types");
const event_dispatch_1 = require("event-dispatch");
const inversify_1 = require("inversify");
const baseRouter_1 = __importDefault(require("./api/routes/baseRouter"));
const token_1 = __importDefault(require("./services/token"));
const token_2 = __importDefault(require("./repositories/token"));
const email_1 = __importDefault(require("./services/email"));
const token_3 = __importDefault(require("./api/routes/token"));
const token_4 = __importDefault(require("./api/controllers/token"));
const auth_1 = __importDefault(require("./api/routes/auth"));
const auth_2 = __importDefault(require("./api/controllers/auth"));
const user_1 = __importDefault(require("./api/routes/user"));
const user_2 = __importDefault(require("./api/controllers/user"));
const user_3 = __importDefault(require("./services/user"));
const user_4 = __importDefault(require("./repositories/user"));
const village_1 = __importDefault(require("./api/controllers/village"));
const village_2 = __importDefault(require("./api/routes/village"));
const village_3 = __importDefault(require("./repositories/village"));
const village_4 = __importDefault(require("./services/village"));
const province_1 = __importDefault(require("./api/routes/province"));
const province_2 = __importDefault(require("./services/province"));
const province_3 = __importDefault(require("./repositories/province"));
const province_4 = __importDefault(require("./api/controllers/province"));
const city_1 = __importDefault(require("./api/routes/city"));
const city_2 = __importDefault(require("./api/controllers/city"));
const city_3 = __importDefault(require("./repositories/city"));
const city_4 = __importDefault(require("./services/city"));
const district_1 = __importDefault(require("./api/controllers/district"));
const district_2 = __importDefault(require("./api/routes/district"));
const district_3 = __importDefault(require("./repositories/district"));
const district_4 = __importDefault(require("./services/district"));
const profile_1 = __importDefault(require("./services/profile"));
const profile_2 = __importDefault(require("./repositories/profile"));
const comment_1 = __importDefault(require("./services/comment"));
const comment_2 = __importDefault(require("./repositories/comment"));
const sellerRequest_1 = __importDefault(require("./api/routes/sellerRequest"));
const sellerRequest_2 = __importDefault(require("./api/controllers/sellerRequest"));
const sellerRequest_3 = __importDefault(require("./repositories/sellerRequest"));
const sellerRequest_4 = __importDefault(require("./services/sellerRequest"));
const bank_1 = __importDefault(require("./api/routes/bank"));
const bank_2 = __importDefault(require("./api/controllers/bank"));
const bank_3 = __importDefault(require("./repositories/bank"));
const bank_4 = __importDefault(require("./services/bank"));
const product_1 = __importDefault(require("./api/routes/product"));
const product_2 = __importDefault(require("./api/controllers/product"));
const product_3 = __importDefault(require("./repositories/product"));
const product_4 = __importDefault(require("./services/product"));
const categories_1 = __importDefault(require("./api/controllers/categories"));
const categories_2 = __importDefault(require("./api/routes/categories"));
const categories_3 = __importDefault(require("./repositories/categories"));
const categories_4 = __importDefault(require("./services/categories"));
const cart_1 = __importDefault(require("./api/controllers/cart"));
const cart_2 = __importDefault(require("./api/routes/cart"));
const cart_3 = __importDefault(require("./repositories/cart"));
const cart_4 = __importDefault(require("./services/cart"));
inversify_1.decorate(inversify_1.injectable(), baseRouter_1.default);
inversify_1.decorate(inversify_1.injectable(), event_dispatch_1.EventDispatcher);
const container = new inversify_1.Container();
exports.container = container;
container.bind(types_1.TYPES.Subscribers).to(subscribers_1.default).inSingletonScope();
container.bind(types_1.TYPES.Connector).to(kafka_1.default).inSingletonScope();
container.bind(types_1.TYPES.IndexRouter).to(routes_1.default).inSingletonScope();
container.bind(types_1.TYPES.AuthRouter).to(auth_1.default).inSingletonScope();
container.bind(types_1.TYPES.AuthController).to(auth_2.default).inSingletonScope();
container.bind(types_1.TYPES.UserRouter).to(user_1.default).inSingletonScope();
container.bind(types_1.TYPES.UserController).to(user_2.default).inSingletonScope();
container.bind(types_1.TYPES.UserService).to(user_3.default).inSingletonScope();
container.bind(types_1.TYPES.UserRepository).to(user_4.default).inSingletonScope();
container.bind(types_1.TYPES.TokenRouter).to(token_3.default).inSingletonScope();
container.bind(types_1.TYPES.TokenController).to(token_4.default).inSingletonScope();
container.bind(types_1.TYPES.TokenService).to(token_1.default).inSingletonScope();
container.bind(types_1.TYPES.TokenRepository).to(token_2.default).inSingletonScope();
container.bind(types_1.TYPES.ProvinceRouter).to(province_1.default).inSingletonScope();
container.bind(types_1.TYPES.ProvinceController).to(province_4.default).inSingletonScope();
container.bind(types_1.TYPES.ProvinceService).to(province_2.default).inSingletonScope();
container.bind(types_1.TYPES.ProvinceRepository).to(province_3.default).inSingletonScope();
container.bind(types_1.TYPES.CityRouter).to(city_1.default).inSingletonScope();
container.bind(types_1.TYPES.CityController).to(city_2.default).inSingletonScope();
container.bind(types_1.TYPES.CityService).to(city_4.default).inSingletonScope();
container.bind(types_1.TYPES.CityRepository).to(city_3.default).inSingletonScope();
container.bind(types_1.TYPES.DistrictRouter).to(district_2.default).inSingletonScope();
container.bind(types_1.TYPES.DistrictController).to(district_1.default).inSingletonScope();
container.bind(types_1.TYPES.DistrictService).to(district_4.default).inSingletonScope();
container.bind(types_1.TYPES.DistrictRepository).to(district_3.default).inSingletonScope();
container.bind(types_1.TYPES.VillageRouter).to(village_2.default).inSingletonScope();
container.bind(types_1.TYPES.VillageController).to(village_1.default).inSingletonScope();
container.bind(types_1.TYPES.VillageService).to(village_4.default).inSingletonScope();
container.bind(types_1.TYPES.VillageRepository).to(village_3.default).inSingletonScope();
container.bind(types_1.TYPES.SellerRequestRouter).to(sellerRequest_1.default).inSingletonScope();
container.bind(types_1.TYPES.SellerRequestController).to(sellerRequest_2.default).inSingletonScope();
container.bind(types_1.TYPES.SellerRequestService).to(sellerRequest_4.default).inSingletonScope();
container.bind(types_1.TYPES.SellerRequestRepository).to(sellerRequest_3.default).inSingletonScope();
container.bind(types_1.TYPES.ProfileService).to(profile_1.default).inSingletonScope();
container.bind(types_1.TYPES.ProfileRepository).to(profile_2.default).inSingletonScope();
container.bind(types_1.TYPES.CommentService).to(comment_1.default).inSingletonScope();
container.bind(types_1.TYPES.CommentRepository).to(comment_2.default).inSingletonScope();
container.bind(types_1.TYPES.BankRouter).to(bank_1.default).inSingletonScope();
container.bind(types_1.TYPES.BankController).to(bank_2.default).inSingletonScope();
container.bind(types_1.TYPES.BankService).to(bank_4.default).inSingletonScope();
container.bind(types_1.TYPES.BankRepository).to(bank_3.default).inSingletonScope();
container.bind(types_1.TYPES.CategoryRouter).to(categories_2.default).inSingletonScope();
container.bind(types_1.TYPES.CategoryController).to(categories_1.default).inSingletonScope();
container.bind(types_1.TYPES.CategoryService).to(categories_4.default).inSingletonScope();
container.bind(types_1.TYPES.CategoryRepository).to(categories_3.default).inSingletonScope();
container.bind(types_1.TYPES.ProductRouter).to(product_1.default).inSingletonScope();
container.bind(types_1.TYPES.ProductController).to(product_2.default).inSingletonScope();
container.bind(types_1.TYPES.ProductService).to(product_4.default).inSingletonScope();
container.bind(types_1.TYPES.ProductRepository).to(product_3.default).inSingletonScope();
container.bind(types_1.TYPES.CartRouter).to(cart_2.default).inSingletonScope();
container.bind(types_1.TYPES.CartController).to(cart_1.default).inSingletonScope();
container.bind(types_1.TYPES.CartService).to(cart_4.default).inSingletonScope();
container.bind(types_1.TYPES.CartRepository).to(cart_3.default).inSingletonScope();
container.bind(types_1.TYPES.EmailService).to(email_1.default).inSingletonScope();
container.bind(types_1.TYPES.ProducerDispatcher).to(dispatcher_2.ProducerDispatcher).inSingletonScope();
container.bind(types_1.TYPES.ConsumerDispatcher).to(dispatcher_1.ConsumerDispatcher).inSingletonScope();
