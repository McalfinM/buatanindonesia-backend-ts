"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.container = void 0;
const routes_1 = __importDefault(require("./api/routes"));
const kafka_1 = __importDefault(require("./events/connectors/kafka"));
const dispatcher_1 = require("./events/consumers/dispatcher");
const dispatcher_2 = require("./events/producers/dispatcher");
const subscribers_1 = __importDefault(require("./events/subscribers"));
const types_1 = require("./types");
const event_dispatch_1 = require("event-dispatch");
const inversify_1 = require("inversify");
const baseRouter_1 = __importDefault(require("./api/routes/baseRouter"));
const token_1 = __importDefault(require("./services/token"));
const token_2 = __importDefault(require("./repositories/token"));
const email_1 = __importDefault(require("./services/email"));
const token_3 = __importDefault(require("./api/routes/token"));
const token_4 = __importDefault(require("./api/controllers/token"));
const auth_1 = __importDefault(require("./api/routes/auth"));
const auth_2 = __importDefault(require("./api/controllers/auth"));
const user_1 = __importDefault(require("./api/routes/user"));
const user_2 = __importDefault(require("./api/controllers/user"));
const user_3 = __importDefault(require("./services/user"));
const user_4 = __importDefault(require("./repositories/user"));
inversify_1.decorate(inversify_1.injectable(), baseRouter_1.default);
inversify_1.decorate(inversify_1.injectable(), event_dispatch_1.EventDispatcher);
const container = new inversify_1.Container();
exports.container = container;
container.bind(types_1.TYPES.Subscribers).to(subscribers_1.default).inSingletonScope();
container.bind(types_1.TYPES.Connector).to(kafka_1.default).inSingletonScope();
container.bind(types_1.TYPES.IndexRouter).to(routes_1.default).inSingletonScope();
container.bind(types_1.TYPES.AuthRouter).to(auth_1.default).inSingletonScope();
container.bind(types_1.TYPES.AuthController).to(auth_2.default).inSingletonScope();
container.bind(types_1.TYPES.UserRouter).to(user_1.default).inSingletonScope();
container.bind(types_1.TYPES.UserController).to(user_2.default).inSingletonScope();
container.bind(types_1.TYPES.UserService).to(user_3.default).inSingletonScope();
container.bind(types_1.TYPES.UserRepository).to(user_4.default).inSingletonScope();
container.bind(types_1.TYPES.TokenRouter).to(token_3.default).inSingletonScope();
container.bind(types_1.TYPES.TokenController).to(token_4.default).inSingletonScope();
container.bind(types_1.TYPES.TokenService).to(token_1.default).inSingletonScope();
container.bind(types_1.TYPES.TokenRepository).to(token_2.default).inSingletonScope();
container.bind(types_1.TYPES.EmailService).to(email_1.default).inSingletonScope();
container.bind(types_1.TYPES.ProducerDispatcher).to(dispatcher_2.ProducerDispatcher).inSingletonScope();
container.bind(types_1.TYPES.ConsumerDispatcher).to(dispatcher_1.ConsumerDispatcher).inSingletonScope();
